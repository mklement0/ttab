.TH "TTAB" "1" "January 2023" "v0.8.0" ""
.SH "NAME"
\fBttab\fR \- open a new terminal tab or window
.SH SYNOPSIS
.P
Opens a new terminal tab or window, on macOS in either Terminal\.app or
.br
iTerm2\.app; on Linux in Gnome Terminal, if available\.
.P
.RS 2
.nf
ttab [\-w|\-v|\-h|\-c] [\-i] [\-s <settings>] [\-t <title>] [\-q] [\-g|\-G] [\-d <dir>] [<cmd> \.\.\.]

\-w                  Open new tab in new terminal window\.
\-c                  Terminal/iTerm only: do not open any new window or tab,
                    run in the current tab of the current window\.
\-v                  iTerm only: open new split tab vertically in the current
                    window\.
\-h                  iTerm only: open new split tab horizontally in the current
                    window\.
\-i                  Suppress up-front verification of the existence of the
                    target directory specified via the -d option\.
\-s <settings>       Assign a settings set (profile)\.
\-t <title>          Specify title for new tab\.
\-q                  Clear the new tab's screen\.
\-g                  Terminal/iTerm only: create in background (don't
                    activate application)\.
\-G                  Terminal/iTerm: don't activate new tab and create in
                    background\.
                    gnome\-terminal: don't activate new tab, except with \-w\.
\-d <dir>            Specify working directory; \-d '' disables inheriting
                    the current dir\. in Terminal/iTerm\.
\-l <secs>           Terminal/iTerm only: delay startup command submission;
                    may be preset via env\. var\. TTAB_CMD_DELAY
\-a Terminal | iTerm Open the new tab in the given terminal app on macOS\.
<cmd> \.\.\.           Command to execute in the new tab\.
"<cmd> \.\.\.; \.\.\."    Multi\-command command line (passed as single operand)\.
.fi
.RE
.P
Standard options: \fB\-\-help\fP, \fB\-\-man\fP, \fB\-\-version\fP, \fB\-\-home\fP
.SH DESCRIPTION
.P
\fBttab\fP opens a new terminal tab with a variety of options,
.br
including executing a command in the new tab, assigning a title and working
.br
directory, and opening the tab in a new window\.
.P
Supports Terminal\.app and iTerm2\.app on macOS, and \- with limitations \-
.br
gnome\-terminal on Linux\.
.P
Note: iTerm2 and gnome\-terminal support is currently not covered by the
.br
automated tests run before every release\.
.P
IMPORTANT: On macOS, \fBTerminal/iTerm2 must be allowed assistive access\fR in
.br
order for this  utility to work, which requires one\-time authorization with
.br
administrative privileges\. If you get error messages instead of being prompted,
.br
authorize the application via
.br
System Preferences > Security & Privacy > Privacy > Accessibility\.
.P
The new tab or window inherits the calling shell's working directory by default\.
.br
On macOS, the new tab or window runs a login shell (i\.e\., loads the user's
.br
shell profile) and inherits the calling shell's working directory\.
.P
When specifying a command to execute in the new tab, quoted parameters are
.br
handled properly and there's no need to quote the command as a whole,
.br
provided it is a \fIsingle\fR command\.
.br
Prefix such a single command with \fBexec\fP to exit the shell after the command
.br
terminates\. If the tab's settings are configured to close tabs on termination
.br
of the shell, the tab will close automatically\.
.P
To specify \fImultiple\fR commands, pass them as a single command\-line string\.
.br
Use \fBexit\fP as the last command to automatically close the tab when the
.br
command terminates, assuming the tab's settings are configured to close the
.br
tab on termination of the shell\.
.br
Precede \fBexit\fP with \fBread \-rsn 1\fP to wait for a keystroke first\.
.P
IMPORTANT: Specifying a command to execute in the new tab has limitations:
.RS 0
.IP \(bu 2
Specifying a startup command is only supported for POSIX\-compatible shells,
.br
because "" is used for behind\-the\-scenes escaping, and the presence of the
.br
\fBeval\fP / \fBexec\fP builtins is assumed on macOS / Linux\.
.br
Notably, this precludes passing commands to PowerShell\.
.IP \(bu 2
With gnome\-terminal (Linux), $SHELL, the user's default shell is invariably
.br
used to execute the command and to run in the new tab, even if the target
.br
profile (settings) is configured to run a different shell\.
.br
Also, a workaround is employed to keep the tab open: because the $SHELL must
.br
be invoked with \-c in order to process the command, it exits on completion,
.br
so \fBexec $SHELL\fP is  executed afterwards to keep the tab open (unless you
.br
pass a single \fBexec\fP command or multi\-command string that ends with \fBexit\fP);
.br
this second $SHELL instance cannot guarantee that the original's shell
.br
environment is fully preserved\.

.RE
.SH OPTIONS
.RS 0
.IP \(bu 2
\fB\-w\fP
.br
 creates the new tab in a new window rather than in the front
.br
 window\.
.IP \(bu 2
\fB\-c\fP
.br
 Terminal/iTerm only:
.br
 does not create any new window or tab, and uses the current tab in the front
.br
 window\.
.br
This migth be useful when tterm is called from an external tool, and
.br
the tool wants targeting the actual terminal directly (e\.g\. from a
.br
macOS service, or Shortcut)\.
.IP \(bu 2
\fB\-h\fP
.br
 iTerm only:
.br
 creates the new tab split horizontally from the current one in the front
.br
 window\.
.IP \(bu 2
\fB\-v\fP
.br
 iTerm only:
.br
 creates the new tab split vertically from the current one in the front
.br
 window\.
.br
.RS 0
.IP \(bu 2
\fB\-i\fP
.br
suppresses up-front verification of the existence of the target directory
.br
specified via the -d option.
.br
This is primarily useful on macOS if this utility is launched from a
.br
non-privileged session (e\.g\., Apple Shortcuts) that may not have access
.br
to the target directory, whereas the targeted terminal application does\.
.br
.IP \(bu 2
\fB\-s <settings>\fP
.br
 specifies the settings set (profile) to apply to the new tab, determining
.br
 the appearance and behavior of the new tab\.
.br
 o Terminal: settings sets are defined in Preferences > Profiles;
.br
 name matching is case\-\fIin\fIsensitive, and specifying nonexistent settings
.br
 causes an error\.
.br
 o iTerm2: profiles are defined in Preferences > Profiles; name matching
.br
 is case\-\fRsensitive\fR, and specifying a nonexistent profile causes an error\.
 o gnome\-terminal: profiles are defined in Edit > Preferences; name matching
.br
 is case\-\fIsensitive\fR, and specifying a nonexistent profile falls back to
.br
 to the default profile\.
.IP \(bu 2
\fB\-t <title>\fP
.br
 specifies a custom title to assign to the new tab\.
.IP \(bu 2
\fB\-d <dir>\fP
.br
 explicitly specifies a working directory for the new tab; by default, the
.br
 invoking shell's working directory is inherited; in Terminal/iTerm, you
.br
 can use \fB\-d ''\fP to disable this inheriting\.
.IP \(bu 2
\fB\-q\fP
.br
 (\fIq\fRuiet) issues a \fBclear\fP command after opening the new tab\.
.br
 Note that output will temporarily be visible while the tab is being opened;
.br
 also, clearing is not performed if any command passed reports an overall
.br
 nonzero exit code, so as to allow failures to be examined\.
.IP \(bu 2
\fB\-g\fP
.br
 Terminal/iTerm2 only:
.br
 (back\fIg\fRround) causes Terminal/iTerm2 not to activate, if it isn't the
.br
 frontmost application); within the application, however, the new tab will
.br
 become the active tab; useful in scripts that launch other applications and
.br
 don't want Terminal/iTerm2 to steal focus later\.
.IP \(bu 2
\fB\-G\fP
.br
 Terminal/iTerm2:
   causes Terminal/iTerm2 not to activate \fIand\fR the active element within
.br
   the application not to change; i\.e\., the active window and tab stay the
.br
   same\. If Terminal/iTerm2 happens to be frontmost, the new tab will
.br
   effectively open in the background\.
 gnome\-terminal:
.br
   causes the new tab not to activate except if it is created in a
.br
   new window (\-w)\.

.RE
.P
NOTE: Terminal/iTerm2: With \fB\-g\fP or \fB\-G\fP, the new tab will still activate
.br
      \fIbriefly, temporarily\fR, for technical reasons\. The temporary activation
.br
      lasts as least as long as the effective \-l value (command\-submission
.br
      delay)\.
.RS 0
.IP \(bu 2
\fB\-l <secs>\fP
.br
  Terminal/iTerm2 only:
.br
  delays submitting a startup command by the specified number
.br
  of seconds (fractions supported); useful for shells with initialization
.br
  files that take a long time to process\.
  Note that setting a working dir\. with \-d alone requires a startup command,
.br
  and that in iTerm2 setting a working dir\. is always required\.
.br
  The default is 0\.1 secs; you can preset a different value via
.br
  environment variable TTAB_CMD_DELAY\. Note the impact on \-g / \-G\.
.IP \(bu 2
\fB\-a Terminal\fP or \fB\-a iTerm2\fP
.br
  explicitly specifies which terminal application to use on macOS;
.br
  by default, the terminal application from which this utility is run is
.br
  implied, if supported, with Terminal / gnome\-terminal used as the default
.br
  on  macOS / Linux\.
.br
  This option is useful for calling this utility from non\-terminal
.br
  applications such as Alfred (https://www\.alfredapp\.com/) on macOS\.

.RE
.SH STANDARD OPTIONS
.P
All standard options provide information only\.
.RS 0
.IP \(bu 2
\fB\-\-help\fP
.br
 Prints the contents of the synopsis chapter to stdout for quick reference\.
.IP \(bu 2
\fB\-\-man\fP
.br
 Displays this manual page, which is a helpful alternative to using \fBman\fP,
 if the manual page isn't installed\.
.IP \(bu 2
\fB\-\-version\fP
.br
 Prints version information\.
.IP \(bu 2
\fB\-\-home\fP
.br
 Opens this utility's home page in the system's default web browser\.

.RE
.SH LICENSE
.P
For license information and more, visit this utility's home page by running
.br
\fBttab \-\-home\fP\|\.
.SH EXAMPLES
.P
.RS 2
.nf
# Open new tab in current terminal window:
ttab

# Open new tab in new terminal window:
ttab \-w

# Execute the command in the current tab of the current terminal window:
ttab \-c 'ls "$HOME/Library/Application Support"'

# Open new horizontal split tab in the current terminal window:
ttab \-h

# Open new vertical split tab in the current terminal window, changing the path to the
# given path, but without checking the presence of the target directory:
ttab \-v \-i \-d "$HOME/Library/Application Support"

# Open new tab with title 'Green' using settings (profile) 'Grass':
ttab \-t Green \-s Grass

# Open new tab and execute a command in it:
ttab ls \-l "$HOME/Library/Application Support"

# Open new tab with specified working dir\. and execute a command in it:
ttab \-d "$HOME/Library/Application Support" ls \-l

# Execute a command and exit\.
# If configured via the default profile, also close the tab\.
ttab exec /path/to/someprogram arg1 arg2

# Pass a multi\-command string as a single, quoted string, wait for a
# keystroke, then exit\.
ttab 'ls "$HOME/Library/Application Support";
                            echo Press any key to exit; read \-rsn 1; exit'

# Create a new tab explicitly in iTerm2\.
ttab \-a iTerm2 echo "Hi from iTerm2\."
.fi
.RE
